buildscript {
    repositories {
        maven { url = 'https://files.minecraftforge.net/maven' }
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.1.+', changing: true
    }
}
apply plugin: 'net.minecraftforge.gradle'
// Only edit below this line, the above code adds and enables the necessary things for Forge to be setup.
apply plugin: 'eclipse'
apply plugin: 'maven-publish'
apply from: 'https://raw.githubusercontent.com/SizableShrimp/Forge-Class-Remapper/main/classremapper.gradle'


version = "1.18.1_v0.4.0.0"
group = 'com.robocraft999.createplus' // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = 'createplus'

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

println('Java: ' + System.getProperty('java.version') + ' JVM: ' + System.getProperty('java.vm.version') + '(' + System.getProperty('java.vendor') + ') Arch: ' + System.getProperty('os.arch'))
minecraft {
    // The mappings can be changed at any time, and must be in the following format.
    // snapshot_YYYYMMDD   Snapshot are built nightly.
    // stable_#            Stables are built at the discretion of the MCP team.
    // Use non-default mappings at your own risk. they may not always work.
    // Simply re-run your setup task after changing the mappings to update your workspace.

    mappings channel: 'official', version: '1.18.1'

    // makeObfSourceJar = false // an Srg named sources jar is made by default. uncomment this to disable.
    
    // accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')

    // Default run configurations.
    // These can be tweaked, removed, or duplicated as needed.
    runs {
        client {
            workingDirectory project.file('run')

			jvmArgs "-Dmixin.env.disableRefMap=true"
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            property 'forge.logging.console.level', 'debug'

            mods {
                createplus {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')

            jvmArgs "-Dmixin.env.disableRefMap=true"
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            property 'forge.logging.console.level', 'debug'

            mods {
                createplus {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')

            jvmArgs "-Dmixin.env.disableRefMap=true"
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            property 'forge.logging.console.level', 'debug'

            // Specify the modid for data generation, where to output the resulting resource, and where to look for existing resources.
            args '--mod', 'createplus', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')

            mods {
                createplus {
                    source sourceSets.main
                }
            }
        }
    }
}

// Include resources generated by data generators.
sourceSets.main.resources { srcDir 'src/generated/resources' }

repositories {
	maven {
        url "https://www.cursemaven.com"
    }
}

dependencies {
    // Specify the version of Minecraft to use, If this is any group other then 'net.minecraft' it is assumed
    // that the dep is a ForgeGradle 'patcher' dependency. And it's patches will be applied.
    // The userdev artifact is a special name and will get all sorts of transformations applied to it.
    minecraft 'net.minecraftforge:forge:1.18.1-39.0.66'

    //compile fg.deobf("curse.maven:create-328085:3167531")//0.3e
    //compile fg.deobf("curse.maven:create-328085:3384222")//0.3.2a
    implementation fg.deobf("curse.maven:create-328085:3623348")//0.3.2d


    //implementation fg.deobf("com:pupnewfster:Mekanism-1.16.4-10.0.18.445")
    //implementation fg.deobf("com:TheIllusiveC4:curios-1.16.4-4.0.3.5")
    
    //compile fg.deobf("curse.maven:mekanism-268560:3183270")
    implementation fg.deobf("curse.maven:curios-309927:3613028")
    

    implementation fg.deobf("curse.maven:flywheel-486392:3623314")
    //implementation fg.deobf("curse.maven:flywheel-486392:3384004")//0.1.0
    //implementation fg.deobf("curse.maven:flywheel-486392:3459739")//0.2.4

}

// Example for how to get properties into the manifest for reading by the runtime..
jar {
    manifest {
        attributes([
            "Specification-Title": "createplus",
            "Specification-Vendor": "robocraft999",
            "Specification-Version": "1", // We are version 1 of ourselves
            "Implementation-Title": project.name,
            "Implementation-Version": "${version}",
            "Implementation-Vendor" :"robocraft999",
            "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

// Example configuration to allow publishing using the maven-publish task
// This is the preferred method to reobfuscate your jar file
jar.finalizedBy('reobfJar') 
// However if you are in a multi-project build, dev time needs unobfed jar files, so you can delay the obfuscation until publishing by doing
//publish.dependsOn('reobfJar')

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact jar
        }
    }
    repositories {
        maven {
            url "file:///${project.projectDir}/mcmodsrepo"
        }
    }
}